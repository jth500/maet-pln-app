import os
from pathlib import Path
import streamlit as st

from chat import chat
from inputs import INPUTS, SIDEBAR_TEXT
from utils import setup_logger

# Config
logger = setup_logger(__name__)
cwd = Path(os.getcwd())

logger.debug("Running from top")  # just useful to undserstand the order of execution


def initialise_session_vars():
    if "messages" not in st.session_state:
        logger.debug("Initialising messages")
        st.session_state.messages = []
    if "choice" not in st.session_state:
        logger.debug("Initialising choice")
        st.session_state.choice = None
    if "model" not in st.session_state:
        logger.debug("Initialising model")
        st.session_state.model = "T5"


def write_user_response(r) -> None:
    with st.chat_message("user"):
        st.write(r)
    st.session_state.messages.append({"role": "user", "content": r})
    logger.debug(f"Printing user input: {r}")
    pass


def info_expander():
    with st.expander("Built by maet-pln for COMP0087"):
        st.write(
            "This app was built as part of the assessment for COMP0087 "
            "(Statistical Natural Language Processing) at University College London 23/24."
        )
        st.write(
            "Our team consists of Isaac, Toby, Lucia, Jack, Louise. We are a group "
            "of MSc students enrolled in 1) Computational Statistics and Machine Learning and 2) Data Science."
        )


def model_callback():
    logger.debug(st.session_state.model)
    st.session_state.choice = None
    pass


def sidebar():
    # TBD What should the radio do - presumably it should change
    with st.sidebar:
        st.title("Select a model")
        st.write(SIDEBAR_TEXT)
        st.write("Disclaimer: Text may have been generated by a large language model.")
        st.radio(
            "Select a model",
            ("T5", "GPT", "BART"),
            on_change=model_callback,
            key="model",
        )
        st.write(f"Model chosen: {st.session_state.model}")
        st.write(
            f"Info about {st.session_state.model}, who built it, number of parameters, etc."
        )

        pass


def button_callback(input):
    logger.debug("button_callback_1")
    st.session_state.choice = input


def input_buttons():

    cols = st.columns([1, 1, 1])
    st.write("Select a Reddit post from the dataset, or input your own below")
    for i, col in enumerate(cols):
        with col:
            st.button(
                INPUTS[i],
                key=f"button_{i}",
                on_click=button_callback,
                kwargs={"input": INPUTS[i]},
            )

    pass


def chat_flow():
    for m in st.session_state.messages:
        with st.chat_message(m["role"]):
            st.write(m["content"])

    if user_input := st.chat_input("Write your message here"):
        logger.info(f"User input received: {user_input}")
        st.session_state.choice = user_input
        st.rerun()

    elif st.session_state.choice:
        # Write the user response if there is one
        logger.info(f"No input received: {st.session_state.choice}")
        write_user_response(st.session_state.choice)
        pass

        response = chat(input=st.session_state.choice, model=st.session_state.model)
        with st.chat_message("assistant"):
            st.markdown(response)
            st.session_state.messages.append({"role": "assistant", "content": response})
    else:
        logger.info("No input received and no choice")


def main():
    st.title("maet-pln says hi")
    initialise_session_vars()
    sidebar()
    info_expander()
    chat_flow()
    input_buttons()
    pass


if __name__ == "__main__":
    main()
